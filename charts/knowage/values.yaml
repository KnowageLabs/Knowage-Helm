knowage:
  version:

  # 
  # Install a db with sample data
  # 
  installSampleData: true

  # 
  # Set the external URL of knowage.
  # 
  # Used to set HTTP headers of the internal proxy.
  # 
  completeExternalUrl: "http://localhost:8080"

  # 
  # Databases properties.
  # 
  db:
    host:     # Needed if you use external DB
    port:     # Needed if you use external DB
    user:     "knowage"
    pass:     # Optional : random value if not provided 
    rootPass: # Optional : random value if not provided 
    name:     "knowage_master"
  cache:
    host:     # Needed if you use external DB
    port:     # Needed if you use external DB
    user:     "knowage"
    pass:     # Optional : random value if not provided 
    rootPass: # Optional : random value if not provided 
    name:     "knowage_cache"
  
  # 
  # Security properties.
  # 
  hmac:                         # Optional : random value if not provided 
  passwordEncryptionSecret:     # Optional : random value if not provided 
  sensibleDataEncryptionSecret: # Optional : random value if not provided 

  # 
  # Technical stuff
  # 
  deployMetadataDb: true
  
  deployCacheDb: true
  
  deployCustomReverseProxy: false

  deployHazelcast: false

  # 
  # Let the user uses a custom image.
  # 
  # Empty for default.
  # 
  customImageName:

  # 
  # Pull secret for private registry when using custom images
  # 
  imagePullSecret:
  
  # 
  # Storage Classes for server, metadata db and cache db
  # 
  storageClasses:
    main: 
    db: 
    cache: 

  # 
  # Content of the services-whitelist.xml inside "/home/knowage/apache-tomcat/resources", for example:
  # 
  #   <WHITELIST>
  #           <service baseurl="https://www.youtube.com" />
  #           <service baseurl="https://vimeo.com" />
  #           <service baseurl="https://www.flickr.com" />
  #           <service baseurl="https://fonts.googleapis.com" />
  #           <service baseurl="https://code.highcharts.com" />
  #           <service relativepath="/knowage/themes/" />
  #           <service relativepath="/knowage/icons/" />
  #           <service relativepath="/knowage/dashboards/" />
  #   </WHITELIST>
  # 
  whitelist:

  # 
  # Content of the services-whitelist.xml inside "/home/knowage/apache-tomcat/resources", for example:
  # 
  #   <?xml version="1.0" encoding="UTF-8"?>
  #   <tomcat-users xmlns="http://tomcat.apache.org/xml"
  #                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  #                 xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
  #                 version="1.0">
  #
  #     <role rolename="tomcat"/>
  #     <role rolename="role1"/>
  #     <user username="tomcat" password="<must-be-changed>" roles="tomcat"/>
  #     <user username="both" password="<must-be-changed>" roles="tomcat,role1"/>
  #     <user username="role1" password="<must-be-changed>" roles="role1"/>
  # 
  #   </tomcat-users>
  tomcatUsers:

  ingress:
    deploy: true
    class: nginx
    isAlb: false
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/app-root: "/knowage"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      # User must use the same node everytime
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/affinity-mode: "persistent"
      nginx.ingress.kubernetes.io/session-cookie-name: "route"
      nginx.ingress.kubernetes.io/session-cookie-path: "/"
      nginx.ingress.kubernetes.io/session-cookie-samesite: "Strict"
      nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: "true"
      nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      # Prevents 413 Request Entity Too Large
      nginx.ingress.kubernetes.io/proxy-body-size: 128m
      # 
      nginx.ingress.kubernetes.io/configuration-snippet: |
        # Compression
        gzip on;
        gzip_types application/xml font/woff2 image/svg+xml text/css text/plain;
  
        # Reverse proxy header
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  
        # Security header
        # WARNING: actually, a bug send also another Strict-Transport-Security but the following is the correct one
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" ;
        add_header X-Content-Type-Options nosniff ;
        add_header X-Permitted-Cross-Domain-Policies "none" ;
  
        # Created by: https://report-uri.com/home/generate
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src-elem 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://alcdn.msauth.net; style-src 'self' 'unsafe-inline'; style-src-elem 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob: http://tile.openstreetmap.org http://*.tile.openstreetmap.org http://www.gravatar.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://login.microsoftonline.com https://gist.githubusercontent.com; object-src 'self'; frame-src 'self' blob: data:; manifest-src 'self'" ;
        add_header Referrer-Policy "no-referrer" ;
  
        # Caching (browser side)
        if ($request_uri ~* \.(js|css|gif|jpe?g|png|svg|woff2?)) {
          expires 1M;
          add_header Cache-Control "public";
        }

  python:
    deploy: true
    libraries:
      - scikit-learn==1.2.2
      - pandas==2.0.1
    resources:
      requests:
        cpu: 0.5
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi
    version:

  r:
    deploy: true
    resources:
      requests:
        cpu: 0.5
        memory: 128Mi
      limits:
        cpu: 1
        memory: 256Mi
    version:

  imagePullPolicy: IfNotPresent

  oauth2:
    enabled: false
    type:           OIDC_IMPLICIT # PKCE, AUTHORIZATION_CODE, OIDC_IMPLICIT, NONE
    authorizeUrl:   https://iam/authorize
    clientId:       00000000-0000-0000-0000-000000000000
    clientSecret:   11111111-1111-1111-1111-111111111111
    accessTokenUrl: https://iam/acceessToken
    redirectUrl:    https://mydomain.com/knowage
    jwksUrl:        https://iam/jwks
    scopes:         openid knowage
    jwtTokenIssuer: https://iam/
    userNameClaim:  "family_name given_name"
    roleJsonPath:   "$.applications[?(@.name == 'Knowage')].profiles[*].name"

  # For debug only
  # useProfileFactoryClass:

  resources:
    requests:
      cpu: 6
      memory: 8Gi
    limits:
      cpu: 8
      memory: 16Gi

  priorityClasses:
    enabled: false
