#
# Knowage, Open Source Business Intelligence suite
# Copyright (C) 2022 Engineering Ingegneria Informatica S.p.A.
# 
# Knowage is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Knowage is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

---
#   _____          _____ _    _ ______   _____  ____  
#  / ____|   /\   / ____| |  | |  ____| |  __ \|  _ \ 
# | |       /  \ | |    | |__| | |__    | |  | | |_) |
# | |      / /\ \| |    |  __  |  __|   | |  | |  _ < 
# | |____ / ____ \ |____| |  | | |____  | |__| | |_) |
#  \_____/_/    \_\_____|_|  |_|______| |_____/|____/ 
#                                                     
{{ $secret := (lookup "v1" "Secret" .Release.Namespace ( include "knowage.db.secret" . ) ) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "knowage.db.secret" . }}
  namespace: {{ .Release.Namespace }}
type: Opaque
{{ if and .Values.knowage.deployCacheDb $secret -}}
data:
  dbUser:     {{ $secret.data.dbUser }}
  dbPass:     {{ $secret.data.dbPass }}
  dbRootPass: {{ $secret.data.dbRootPass }}
  dbDb:       {{ $secret.data.dbDb }}
{{ else -}}
stringData:
  dbUser:     "{{ .Values.knowage.db.user }}"
  dbPass:     "{{ default ( randAlphaNum 32 ) .Values.knowage.db.pass }}"
  dbRootPass: "{{ default ( randAlphaNum 32 ) .Values.knowage.db.rootPass  }}"
  dbDb:       "{{ .Values.knowage.db.name }}"
{{ end }}

---
#  __  __           _____ _______ ______ _____    _____  ____  
# |  \/  |   /\    / ____|__   __|  ____|  __ \  |  __ \|  _ \ 
# | \  / |  /  \  | (___    | |  | |__  | |__) | | |  | | |_) |
# | |\/| | / /\ \  \___ \   | |  |  __| |  _  /  | |  | |  _ < 
# | |  | |/ ____ \ ____) |  | |  | |____| | \ \  | |__| | |_) |
# |_|  |_/_/    \_\_____/   |_|  |______|_|  \_\ |_____/|____/ 
#                                                              
{{ $secret := (lookup "v1" "Secret" .Release.Namespace ( include "knowage.cache.secret" . ) ) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "knowage.cache.secret" . }}
  namespace: {{ .Release.Namespace }}
type: Opaque
{{ if and .Values.knowage.deployMetadataDb $secret -}}
data:
  dbUser: {{ $secret.data.dbUser }}
  dbPass: {{ $secret.data.dbPass }}
  dbRootPass: {{ $secret.data.dbRootPass }}
  dbDb: {{ $secret.data.dbDb }}
{{ else -}}
stringData:
  dbUser: "{{ .Values.knowage.cache.user }}"
  dbPass: "{{ default ( randAlphaNum 32 ) .Values.knowage.cache.pass }}"
  dbRootPass: "{{ default ( randAlphaNum 32 ) .Values.knowage.cache.rootPass }}"
  dbDb: "{{ .Values.knowage.cache.name }}"
{{ end }}

---
#  __  __          _____ _   _            _____  _____  
# |  \/  |   /\   |_   _| \ | |     /\   |  __ \|  __ \ 
# | \  / |  /  \    | | |  \| |    /  \  | |__) | |__) |
# | |\/| | / /\ \   | | | . ` |   / /\ \ |  ___/|  ___/ 
# | |  | |/ ____ \ _| |_| |\  |  / ____ \| |    | |     
# |_|  |_/_/    \_\_____|_| \_| /_/    \_\_|    |_|     
#                                                       
{{ $secret := (lookup "v1" "Secret" .Release.Namespace ( include "knowage.secret" . ) ) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "knowage.secret" . }}
  namespace: {{ .Release.Namespace }}
type: Opaque
{{ if $secret -}}
data:
  hmac: {{ $secret.data.hmac }}
  passwordEncryptionSecret: {{ $secret.data.passwordEncryptionSecret }}
  sensibleDataEncryptionSecret: {{ $secret.data.sensibleDataEncryptionSecret }}
{{ else -}}
stringData:
  hmac: "{{ default ( randAlphaNum 32 ) .Values.knowage.hmac }}"
  passwordEncryptionSecret: "{{ default ( randAlphaNum 32 ) .Values.knowage.passwordEncryptionSecret }}"
  sensibleDataEncryptionSecret: "{{ default ( randAlphaNum 32 ) .Values.knowage.sensibleDataEncryptionSecret }}"
{{ end }}

{{ if .Values.knowage.oauth2.enabled }}
---
#   ____               _   _     ___  
#  / __ \   /\        | | | |   |__ \ 
# | |  | | /  \  _   _| |_| |__    ) |
# | |  | |/ /\ \| | | | __| '_ \  / / 
# | |__| / ____ \ |_| | |_| | | |/ /_ 
#  \____/_/    \_\__,_|\__|_| |_|____|
{{ $secret := (lookup "v1" "Secret" .Release.Namespace ( include "knowage.oauth2.secret" . ) ) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "knowage.oauth2.secret" . }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  authorizeUrl: {{ print .Values.knowage.oauth2.authorizeUrl }}
  clientId: {{ print .Values.knowage.oauth2.clientId }}
  clientSecret: {{ print .Values.knowage.oauth2.clientSecret }}
  accessTokenUrl: {{ print .Values.knowage.oauth2.accessTokenUrl }}
  flowType: {{ print .Values.knowage.oauth2.type }}
  redirectUrl: {{ print .Values.knowage.oauth2.redirectUrl }}
  jwksUrl: {{ print .Values.knowage.oauth2.jwksUrl }}
  scopes: {{ print .Values.knowage.oauth2.scopes }}
  jwtTokenIssuer: {{ print .Values.knowage.oauth2.jwtTokenIssuer }}
  userNameClaim: {{ print .Values.knowage.oauth2.userNameClaim }}
  roleJsonPath: {{ print .Values.knowage.oauth2.roleJsonPath }}
{{ end }}
