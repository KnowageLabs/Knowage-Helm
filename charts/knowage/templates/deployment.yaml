#
# Knowage, Open Source Business Intelligence suite
# Copyright (C) 2022 Engineering Ingegneria Informatica S.p.A.
# 
# Knowage is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Knowage is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

{{ if eq ( default .Values.knowage.deployCustomReverseProxy false ) true }}
#  _____  ________      ________ _____   _____ ______   _____  _____   ______   ____     __
# |  __ \|  ____\ \    / /  ____|  __ \ / ____|  ____| |  __ \|  __ \ / __ \ \ / /\ \   / /
# | |__) | |__   \ \  / /| |__  | |__) | (___ | |__    | |__) | |__) | |  | \ V /  \ \_/ / 
# |  _  /|  __|   \ \/ / |  __| |  _  / \___ \|  __|   |  ___/|  _  /| |  | |> <    \   /  
# | | \ \| |____   \  /  | |____| | \ \ ____) | |____  | |    | | \ \| |__| / . \    | |   
# |_|  \_\______|   \/   |______|_|  \_\_____/|______| |_|    |_|  \_\\____/_/ \_\   |_|   
#                                                                                          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knowage.proxy.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: proxy
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: proxy
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.proxy.pod" . }}
        image: "nginx:1"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: {{ include "knowage.proxy.config" . }}
        - mountPath: /var/log/nginx
          name: log
        - mountPath: /var/cache/nginx
          name: cache
      volumes:
      - name: {{ include "knowage.proxy.config" . }}
        configMap:
          name: {{ include "knowage.proxy.config" . }}
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}
      - name: cache
        emptyDir: {}
{{ end }}

#  __  __          _____ _   _            _____  _____  
# |  \/  |   /\   |_   _| \ | |     /\   |  __ \|  __ \ 
# | \  / |  /  \    | | |  \| |    /  \  | |__) | |__) |
# | |\/| | / /\ \   | | | . ` |   / /\ \ |  ___/|  ___/ 
# | |  | |/ ____ \ _| |_| |\  |  / ____ \| |    | |     
# |_|  |_/_/    \_\_____|_| \_| /_/    \_\_|    |_|     
#                                                       
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "knowage.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "knowage-main"
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: knowage
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: knowage
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.pod" . }}
        image: {{ printf "%s:%s" ( default "knowagelabs/knowage-server-docker" .Values.knowage.customImageName ) .Chart.AppVersion | quote }}
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbUser
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbPass
          - name: DB_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbDb
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ include "knowage.config" . }}
                key: dbHost
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "knowage.config" . }}
                key: dbPort

          - name: CACHE_DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbUser
          - name: CACHE_DB_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbPass
          - name: CACHE_DB_DB
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbDb
          - name: CACHE_DB_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ include "knowage.config" . }}
                key: cacheDbHost
          - name: CACHE_DB_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "knowage.config" . }}
                key: cacheDbPort

          - name: HMAC_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.secret" . }}
                key: hmac
          - name: PASSWORD_ENCRYPTION_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.secret" . }}
                key: passwordEncryptionSecret
          - name: HAZELCAST_HOSTS
            value: {{ include "knowage.hazelcast.service" . }}
        livenessProbe:
          httpGet:
            path: /knowage/restful-services/version
            port: 8080
          initialDelaySeconds: 120
          failureThreshold: 5
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /knowage/restful-services/version
            port: 8080
          initialDelaySeconds: 120
          failureThreshold: 5
          periodSeconds: 30
        ports:
          - name: main
            containerPort: 8080
            protocol: TCP
        resources:
          requests:
            cpu: 1
          limits:
            cpu: 1
        volumeMounts:
        - name: resources
          mountPath: /home/knowage/apache-tomcat/resources
        - name: services-whitelist
          mountPath: /home/knowage/apache-tomcat/resources/services-whitelist.xml
          subPath: services-whitelist.xml
        - name: tomcat-users
          mountPath: /home/knowage/apache-tomcat/conf/tomcat-users.xml
          subPath: tomcat-users.xml
        - name: ext-global-resources
          mountPath: /home/knowage/apache-tomcat/conf/server.xml.d
        - name: ext-context
          mountPath: /home/knowage/apache-tomcat/conf/context.xml.d
      {{ if .Values.knowage.imagePullSecret -}}
      imagePullSecrets:
      - name: {{ print .Values.knowage.imagePullSecret | quote }}
      {{- end }}
      volumes:
      - name: resources
        persistentVolumeClaim:
          claimName: {{ include "knowage.pvc" . }}
      - name: services-whitelist
        configMap:
          name: {{ include "knowage.config" . }}
          items:
            - key: servicesWhitelist
              path: services-whitelist.xml
      - name: tomcat-users
        configMap:
          name: {{ include "knowage.config" . }}
          items:
            - key: tomcatUsers
              path: tomcat-users.xml
      - name: ext-global-resources
        configMap:
          name: {{ include "knowage.config" . }}
          items:
            - key: extGlobalResources
              path: extGlobalResources
      - name: ext-context
        configMap:
          name: {{ include "knowage.config" . }}
          items:
            - key: extContext
              path: extContext




{{ if .Values.knowage.deployMetadataDb }}
#  __  __           _____ _______ ______ _____    _____  ____  
# |  \/  |   /\    / ____|__   __|  ____|  __ \  |  __ \|  _ \ 
# | \  / |  /  \  | (___    | |  | |__  | |__) | | |  | | |_) |
# | |\/| | / /\ \  \___ \   | |  |  __| |  _  /  | |  | |  _ < 
# | |  | |/ ____ \ ____) |  | |  | |____| | \ \  | |__| | |_) |
# |_|  |_/_/    \_\_____/   |_|  |______|_|  \_\ |_____/|____/ 
#                                                              
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "knowage.db.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "knowage-db"
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: knowagedb
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: knowagedb
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ include "knowage.db.pod" . }}
        image: mariadb:10.3
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbUser
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbPass
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbRootPass
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.db.secret" . }}
                key: dbDb
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        ports:
          - name: main
            containerPort: 3306
            protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "knowage.db.pvc" . }}
{{ end }}


{{ if .Values.knowage.deployCacheDb }}
#   _____          _____ _    _ ______   _____  ____  
#  / ____|   /\   / ____| |  | |  ____| |  __ \|  _ \ 
# | |       /  \ | |    | |__| | |__    | |  | | |_) |
# | |      / /\ \| |    |  __  |  __|   | |  | |  _ < 
# | |____ / ____ \ |____| |  | | |____  | |__| | |_) |
#  \_____/_/    \_\_____|_|  |_|______| |_____/|____/ 
#                                                     
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "knowage.cache.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "knowage-cache-db"
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: knowagecachedb
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: knowagecachedb
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ include "knowage.cache.pod" . }}
        image: mariadb:10.3
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbUser
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbPass
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbRootPass
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.cache.secret" . }}
                key: dbDb
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        ports:
          - name: main
            containerPort: 3306
            protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "knowage.cache.pvc" . }}
{{ end }}



{{ if eq ( default .Values.knowage.installSampleData false ) true }}
#  ______ ____   ____  _____  __  __          _____ _______ 
# |  ____/ __ \ / __ \|  __ \|  \/  |   /\   |  __ \__   __|
# | |__ | |  | | |  | | |  | | \  / |  /  \  | |__) | | |   
# |  __|| |  | | |  | | |  | | |\/| | / /\ \ |  _  /  | |   
# | |   | |__| | |__| | |__| | |  | |/ ____ \| | \ \  | |   
# |_|    \____/ \____/|_____/|_|  |_/_/    \_\_|  \_\ |_|   
#                                                           
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knowage.foodmart.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: foodmart
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: foodmart
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.foodmart.pod" . }}
        image: "m20tech/mysql-foodmart"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
        ports:
          - name: main
            containerPort: 3306
            protocol: TCP
{{ end }}

#  _______     _________ _    _  ____  _   _ 
# |  __ \ \   / /__   __| |  | |/ __ \| \ | |
# | |__) \ \_/ /   | |  | |__| | |  | |  \| |
# |  ___/ \   /    | |  |  __  | |  | | . ` |
# | |      | |     | |  | |  | | |__| | |\  |
# |_|      |_|     |_|  |_|  |_|\____/|_| \_|
#                                            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knowage.python.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: knowage-python
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: knowage-python
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.python.pod" . }}
        image: "knowagelabs/knowage-python-docker:{{ .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        env:
          - name: HMAC_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.secret" . }}
                key: hmac
        livenessProbe:
          httpGet:
            path: /dataset/libraries
            port: 5000
          initialDelaySeconds: 10
          failureThreshold: 5
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /dataset/libraries
            port: 5000
          initialDelaySeconds: 10
          failureThreshold: 5
          periodSeconds: 1
        ports:
          - name: main
            containerPort: 5000
            protocol: TCP



---
#  _____  
# |  __ \ 
# | |__) |
# |  _  / 
# | | \ \ 
# |_|  \_\
#         
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knowage.r.deployment" . }}z
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: knowage-r
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: knowage-r
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.r.pod" . }}
        image: "knowagelabs/knowage-r-docker:{{ .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        env:
          - name: HMAC_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "knowage.secret" . }}
                key: hmac
        livenessProbe:
          httpGet:
            path: /dataset/libraries
            port: 5001
          initialDelaySeconds: 10
          failureThreshold: 5
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /dataset/libraries
            port: 5001
          initialDelaySeconds: 10
          failureThreshold: 5
          periodSeconds: 1
        ports:
          - name: main
            containerPort: 5001
            protocol: TCP



#  _    _           ____________ _      _____           _____ _______ 
# | |  | |   /\    |___  /  ____| |    / ____|   /\    / ____|__   __|
# | |__| |  /  \      / /| |__  | |   | |       /  \  | (___    | |   
# |  __  | / /\ \    / / |  __| | |   | |      / /\ \  \___ \   | |   
# | |  | |/ ____ \  / /__| |____| |___| |____ / ____ \ ____) |  | |   
# |_|  |_/_/    \_\/_____|______|______\_____/_/    \_\_____/   |_|   
#                                                                     
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knowage.hazelcast.deployment" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      knowage-suite.com/app: hazelcast
      {{- include "knowage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        knowage-suite.com/app: hazelcast
        {{- include "knowage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ include "knowage.hazelcast.pod" . }}
        image: "hazelcast/hazelcast:3.6.5"
        imagePullPolicy: IfNotPresent
        env:
          - name: JAVA_OPTS
            value: -Dhazelcast.local.publicAddress={{ include "knowage.hazelcast.service" . }} -Dhazelcast.config=/opt/hazelcast/hazelcast.xml
        ports:
          - name: main
            containerPort: 5701
            protocol: TCP
        volumeMounts:
        - name: hazelcast-server-xml
          mountPath: /opt/hazelcast/hazelcast.xml
          subPath: hazelcast.xml
      volumes:
      - name: hazelcast-server-xml
        configMap:
          name: {{ include "knowage.hazelcast.config" . }}
          items:
            - key: hazelcast.xml
              path: hazelcast.xml
